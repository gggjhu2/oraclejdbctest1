package member.model.dao;

import member.model.vo.Member;

//DAO
//			Data Access Object
//			DB(데이터)에 접근하는 클래스라는뜼==>데이터에접근하는거는 DAO가 전부처리하도록
//			설계해야하는것이중요하다.
//
//		1.드라이버 클래스 등록(최초1회 필요)
//		2.Connection 객체 생성  <==이때필요한것 (url ,user ,pssword) 
//		3.자동 커밋여부 설정  <<==(디펄트는 셋오토커밋트루로 설정이되어 자동커밋이된다_=>우리는false로수동커밋설정)
//		4.prepaedStatement객체 생성. =>이떄필요한것이 =>미완성쿼리 (값대입이안된상태의 쿼리) 및 값대입
//		5.Statement 객체 실행 (DB에 쿼리 요청)
//		6.응답에대한 처리 DML 이냐 DQL이냐에따라 달라진다.
//			-DML :INT리턴
///			-DQL ResultSet을 리턴 ->자바 객체로 번환과정필요.
//		7.트랜잭션처리 (DML 일격우만 한다)
//		8.사용자원 반납.(생성의 역순)

		
public class MemberDao {

	public int insertMember(Member member) {
		//DAO 작성
//
//	1.드라이버 클래스 등록(최초1회 필요)
		String driverClass ="oracle.jdbc.OracleDriver";
//	2.Connection 객체 생성  <==이때필요한것 ( url ,user , password) 
//	3.자동 커밋여부 설정  <<==(디펄트는 셋오토커밋트루로 설정이되어 자동커밋이된다_=>우리는false로수동커밋설정)
//	4.prepaedStatement객체 생성. =>이떄필요한것이 =>미완성쿼리 (값대입이안된상태의 쿼리) 및 값대입
//	5.Statement 객체 실행 (DB에 쿼리 요청)
//	6.응답에대한 처리 DML 이냐 DQL이냐에따라 달라진다.
//		-DML :INT리턴
///			-DQL ResultSet을 리턴 ->자바 객체로 번환과정필요.
//	7.트랜잭션처리 (DML 일격우만 한다)
//	8.사용자원 반납.(생성의 역순)

		
		return 0;
	}
	
}
