package member.model.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

import member.model.vo.Member;

//DAO
//			Data Access Object
//			DB(데이터)에 접근하는 클래스라는뜼==>데이터에접근하는거는 DAO가 전부처리하도록
//			설계해야하는것이중요하다.
//
//		1.드라이버 클래스 등록(최초1회 필요)
//		2.Connection 객체 생성  <==이때필요한것 (url ,user ,pssword) 
//		3.자동 커밋여부 설정  <<==(디펄트는 셋오토커밋트루로 설정이되어 자동커밋이된다_=>우리는false로수동커밋설정)
//		4.prepaedStatement객체 생성. =>이떄필요한것이 =>미완성쿼리 (값대입이안된상태의 쿼리) 및 값대입
//		5.Statement 객체 실행 (DB에 쿼리 요청)
//		6.응답에대한 처리 DML 이냐 DQL이냐에따라 달라진다.
//			-DML :INT리턴
///			-DQL ResultSet을 리턴 ->자바 객체로 번환과정필요.
//		7.트랜잭션처리 (DML 일격우만 한다)
//		8.사용자원 반납.(생성의 역순)

public class MemberDao {

	public int insertMember(Member member) {
		// DAO 작성
//
//	1.드라이버 클래스 등록(최초1회 필요)
		String driverClass = "oracle.jdbc.OracleDriver";
		try {
			Class.forName(driverClass); // <==체크드익셉션으로서 예외처리를 강제한다.
			
			
//	2.Connection 객체 생성  <==이때필요한것 ( url ,user , password)
			// db드라이버타입 @ 아이피도메인 :포트번호 : db이름
			String url = "jdbc:oracle:thin:@localhost:1521:xe";
			String user = "student"; // <==대소문자구분 x
			String password = "student";// <==대소문자 구분 o
			Connection conn = DriverManager.getConnection(url, user, password);
			// -->이것역시 sql 디비 관련 최상위 예외를 던진다.

			
//	3.자동 커밋여부 설정  <<==(디펄트는 셋오토커밋트루로 설정이되어 자동커밋이된다_=>우리는false로수동커밋설정)
		 conn.setAutoCommit(false); //<==DQL을 우리가 직접 할수있게 자동커밋을 해제한다.
			
			
//	4.prepaedStatement객체 생성. =>이떄필요한것이 =>미완성쿼리 (값대입이안된상태의 쿼리) 및 값대입
		 String sql ="insert int member values(?,?,?,?,?,?,?,?,?,default)";
		 									//이부분에 값이 들어가있지않아서 이부분을 미완성쿼리라고한다.
		 PreparedStatement pstmt =conn.prepareStatement(sql);
		 pstmt.setString(1,member.getMemberId());
		 pstmt.setString(2,member.getPassword());
		 pstmt.setString(3,member.getMemberName());
		 pstmt.setString(4,member.getGender());
		 pstmt.setInt(5,member.getAge());
		 pstmt.setString(6,member.getEmail());
		 pstmt.setString(7,member.getPhone());
		 pstmt.setString(8,member.getAddress());
		 pstmt.setString(9,member.getHobby());
		 
		 
//	5.Statement 객체 실행 (DB에 쿼리 요청)
//	6.응답에대한 처리 DML 이냐 DQL이냐에따라 달라진다.
		 int result =pstmt.executeUpdate(); //<=dml 일떄 update , dql일때 는딴거
		 	//1이 들어오면 정상처리된거다.

		 
		 //		-DML :INT리턴
///			-DQL ResultSet을 리턴 ->자바 객체로 번환과정필요.
//	7.트랜잭션처리 (DML 일격우만 한다)
		 if(result >0)
			 conn.commit();
		 else 
			 conn.rollback();
		} catch (ClassNotFoundException e) {
			// ojdbc6.jar 익셉션 발생시 프로젝트 연동실패했다는것을 알수있따.
			e.printStackTrace();
		} catch (SQLException e) {
			e.printStackTrace();
		}

//	8.사용자원 반납.(생성의 역순)

		return 0;
	}

}
